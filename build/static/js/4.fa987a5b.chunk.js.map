{"version":3,"sources":["app/EgretLayout/SharedCompoents/NotificationBar.jsx","app/EgretLayout/SharedCompoents/LanguageSelect.jsx","app/EgretLayout/SharedCompoents/Sidenav.jsx","app/navigations.js","app/EgretLayout/SharedCompoents/Brand.jsx","app/EgretLayout/EgretTheme/SidenavTheme.jsx","app/EgretLayout/SharedCompoents/Footer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/BadgeSelected.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/customizerOptions.js","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout1Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout2Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx","app/EgretLayout/SharedCompoents/SecondarySidebar.jsx"],"names":["withStyles","withTheme","connect","state","getNotification","PropTypes","func","isRequired","deleteNotification","deleteAllNotification","notification","settings","layout","props","container","theme","_React$useState","React","useState","_React$useState2","Object","D_OCEANTECH_TRAINING_L3_Project_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","palette","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","themes","activeTheme","LanguageSelect","selected","hasError","value","_this$props","this","i18n","t","classes","changeLanguage","setState","_this2","_this$props2","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","className","root","autoComplete","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_11__","formControl","error","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_8__","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_12__","name","onChange","event","handleChange","target","input","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_7__","id","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_10__","Component","display","flexWrap","margin","spacing","unit","minWidth","selectEmpty","marginTop","ViewEgretVerticalNav","withTranslation","EgretVerticalNav","Sidenav","updateSidebarMode","sidebarSettings","_this","setLayoutSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","D_OCEANTECH_TRAINING_L3_Project_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","[object Object]","leftSidebar","renderOverlay","react__WEBPACK_IMPORTED_MODULE_6___default","onClick","mode","navigation","localStorageService","getSessionItem","length","navigations","react__WEBPACK_IMPORTED_MODULE_6__","react_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_7___default","option","suppressScrollX","children","getNavigation","withRouter","__webpack_require__","d","__webpack_exports__","_appConfig__WEBPACK_IMPORTED_MODULE_0__","_appConfig__WEBPACK_IMPORTED_MODULE_0___default","n","isVisible","path","ConstantList","ROOT_PATH","icon","Brand","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","HOME_PAGE","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_helmet__WEBPACK_IMPORTED_MODULE_1__","SidenavTheme","_ref","concat","type","text","secondary","layout1Settings","bgImgURL","primary","main","bgOpacity","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_5__","footerTheme","footer","contrastText","href","variant","color","BadgeSelected","badge","top","right","height","width","borderRadius","Badge","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleControlChange","react_default","react","map","i","Tooltip","key","title","placement","style","backgroundColor","themeColors","Icon","topbar","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","bg","EgretCustomizer_BadgeSelected","badgeContent","invisible","Paper","src","alt","Slider","marks","step","max","min","valueLabelDisplay","aria-labelledby","FormGroup","Switch","checked","get","Layout2Customizer","keys","layout2Settings","navbar","EgretCustomizer","open","updateSettings","newSettings","setDefaultSettings","updatedSettings","merge","selectLayout","set","controlValue","tooglePanel","objectSpread","IconButton","size","ThemeProvider","background","default","minHeight","lib_default","options","elevation","EgretCustomizer_Layout1Customizer","EgretCustomizer_Layout2Customizer","secondarySidebar","paper","SecondarySidebar","toggle","listenWindowResize","debounce","isMobile","window","listenWindowResizeRef","addEventListener","removeEventListener","secondarySidebarTheme","Helmet","classList","secondary-sidebar","SharedCompoents_EgretCustomizer_EgretCustomizer","Fab","position","bottom","flexDirection","alignItems","justifyContent","boxShadow","shadows","zIndex","transition","&.open","& .toggle","left"],"mappings":"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","file":"static/js/4.fa987a5b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  MuiThemeProvider,\r\n  Card,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { getTimeDifference } from \"utils.js\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getNotification,\r\n  deleteAllNotification,\r\n  deleteNotification\r\n} from \"../../redux/actions/NotificationActions\";\r\n\r\nfunction NotificationBar(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    notification: notifcationList = [],\r\n    getNotification,\r\n    deleteAllNotification,\r\n    deleteNotification\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    if (!panelOpen) {\r\n      getNotification();\r\n    }\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n  const parentThemePalette = theme.palette;\r\n  // console.log(theme);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      {/* <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={5}>\r\n          <Icon>notifications</Icon>\r\n        </Badge>\r\n      </IconButton> */}\r\n\r\n      {/* <Drawer\r\n        width={\"100px\"}\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"notification\">\r\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\r\n            <Icon color=\"primary\">notifications</Icon>\r\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notifications</h5>\r\n          </div>\r\n\r\n          {notifcationList.map(notification => (\r\n            <div\r\n              key={notification.id}\r\n              className=\"notification__card position-relative\"\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                className=\"delete-button bg-light-gray mr-24\"\r\n                onClick={() => deleteNotification(notification.id)}\r\n              >\r\n                <Icon className=\"text-muted\" fontSize=\"small\">\r\n                  clear\r\n                </Icon>\r\n              </IconButton>\r\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\r\n                <Card className=\"mx-16 mb-24\" elevation={3}>\r\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\r\n                    <div className=\"flex\">\r\n                      <div className=\"card__topbar__button\">\r\n                        <Icon\r\n                          className=\"card__topbar__icon\"\r\n                          fontSize=\"small\"\r\n                          color={notification.icon.color}\r\n                        >\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                      </div>\r\n                      <span className=\"ml-4 font-weight-500 text-muted\">\r\n                        {notification.heading}\r\n                      </span>\r\n                    </div>\r\n                    <small className=\"card__topbar__time text-muted\">\r\n                      {getTimeDifference(new Date(notification.timestamp))} ago\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"px-16 pt-8 pb-16\">\r\n                    <p className=\"m-0\">{notification.title}</p>\r\n                    <small className=\"text-muted\">\r\n                      {notification.subtitle}\r\n                    </small>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"text-center\">\r\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\r\n          </div>\r\n        </div>\r\n      </Drawer> */}\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nNotificationBar.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  notification: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  getNotification: PropTypes.func.isRequired,\r\n  deleteNotification: PropTypes.func.isRequired,\r\n  deleteAllNotification: PropTypes.func.isRequired,\r\n  notification: state.notification,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { getNotification, deleteNotification, deleteAllNotification }\r\n  )(NotificationBar)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass LanguageSelect extends React.Component {\r\n\r\n\r\n  state = {\r\n    selected: 'vi',\r\n    hasError: false\r\n  };\r\n\r\n  handleChange(value) {\r\n    //alert(t('description.part1'));\r\n    const { t, i18n,classes } = this.props;\r\n    i18n.changeLanguage(value);\r\n    this.setState({ selected: value });\r\n  }\r\n  render() {\r\n    const { t, i18n,classes } = this.props;\r\n    const { selected, hasError } = this.state;\r\n    let language= 'vi';\r\n    const changeLanguage = lng => {\r\n      i18n.changeLanguage(lng);\r\n    };  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl className={classes.formControl} error={hasError}>\r\n          <InputLabel htmlFor=\"name\">{t('general.language')}</InputLabel>\r\n          <Select\r\n            name=\"name\"\r\n            value={selected}\r\n            onChange={event => this.handleChange(event.target.value)}\r\n            input={<Input id=\"name\" />}\r\n          >\r\n            <MenuItem value=\"vi\">Tiếng Việt</MenuItem>\r\n            {/* <MenuItem value=\"de\">Deutsch</MenuItem> */}\r\n            {/* <MenuItem value=\"en\">English</MenuItem> */}\r\n          </Select>\r\n          {hasError && <FormHelperText>This is required!</FormHelperText>}\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLanguageSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(LanguageSelect);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { navigations } from \"../../navigations\";\r\nimport { EgretVerticalNav } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport JwtAuthService from \"../../services/jwtAuthService\";\r\nimport localStorageService from \"../../services/localStorageService\";\r\nconst ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\r\nclass Sidenav extends Component {\r\n  state = {};\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    let activeLayoutSettingsName = settings.activeLayout+\"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  renderOverlay = () => (\r\n    <div\r\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\r\n      className=\"sidenav__overlay\"\r\n    />\r\n  );\r\n  getNavigation(){\r\n    let navigation=localStorageService.getSessionItem(\"navigations\");\r\n    // let navigation=localStorageService.getLocalStorageItem(\"navigations\");\r\n    if(navigation && navigation.length>0){\r\n      return navigation;\r\n    }else {\r\n      return navigations;\r\n    }\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Scrollbar option={{suppressScrollX: true}} className=\"scrollable position-relative\">\r\n          {this.props.children}\r\n          <ViewEgretVerticalNav navigation={this.getNavigation()} />\r\n        </Scrollbar>\r\n        {this.renderOverlay()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    {\r\n      setLayoutSettings\r\n    }\r\n  )(Sidenav)\r\n);","import ConstantList from \"./appConfig\";\r\nexport const navigations = [\r\n  {\r\n    name: \"Dashboard.addStaff\",\r\n    isVisible: true,\r\n    path: ConstantList.ROOT_PATH + \"staff_manager/AddStaff\",\r\n    icon: \"person\"\r\n  },\r\n  {\r\n    name: \"Dashboard.LeadershipApproval\",\r\n    isVisible: true,\r\n    path: ConstantList.ROOT_PATH + \"staff_manager/LeadershipApproval\",\r\n    icon: \"receipt\"\r\n  },\r\n  {\r\n    name: \"Dashboard.LeadershipApproved\",\r\n    isVisible: true,\r\n    path: ConstantList.ROOT_PATH + \"staff_manager/LeadershipApproved\",\r\n    icon: \"receipt\"\r\n  }\r\n\r\n];\r\n","import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet';\r\nclass Brand extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-middle flex-space-between brand-area\">\r\n        <div className=\"flex flex-middle brand logo-menu\">\r\n          <Link to={ConstantList.HOME_PAGE}>\r\n            <span className=\"brand__text\">Quản Lí Nhân Viên</span>\r\n          </Link>\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SidenavTheme = ({ theme, settings }) => {\r\n\r\n  function darkHoverStyle() {\r\n    return theme.palette.type === \"dark\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active {\r\n          color: ${theme.palette.text.primary};\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  function lightHoverStyle() {\r\n    return theme.palette.type === \"light\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active,\r\n        .navigation .submenu {\r\n          background: rgba(0, 0, 0, .08);\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <style>\r\n        {`\r\n        \r\n        ${\r\n          theme.palette.type === \"dark\"\r\n            ? `.sidenav {\r\n          color: ${theme.palette.text.secondary};\r\n        }`\r\n            : \" \"\r\n        }\r\n\r\n        .sidenav__hold {\r\n          background-image: url(${\r\n            settings.layout1Settings.leftSidebar.bgImgURL\r\n          });\r\n          opacity: 1 !important;\r\n        }\r\n        .sidenav__hold::after {\r\n          background: ${theme.palette.primary.main};\r\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\r\n        }\r\n\r\n        ${lightHoverStyle()}\r\n        ${darkHoverStyle()}\r\n        \r\n      `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import React from \"react\";\r\nimport { withStyles, MuiThemeProvider, Button } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Footer = ({ theme, settings }) => {\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n  return (\r\n    <MuiThemeProvider theme={footerTheme}>\r\n      <Helmet>\r\n        <style>\r\n          {`\r\n              .footer {\r\n                background: ${footerTheme.palette.primary.main};\r\n                color: ${footerTheme.palette.primary.contrastText};\r\n              }\r\n            `}\r\n        </style>\r\n      </Helmet>\r\n      <div className=\"footer flex flex-middle\">\r\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\r\n          <a href=\"#\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Hotline: 0349655473\r\n            </Button>\r\n          </a>\r\n          <span className=\"m-auto\"></span>\r\n          {/* <p className=\"m-0\">\r\n              Developed by <a href=\"http://globits.net\">Globits</a>\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Footer)\r\n);\r\n","import { Badge, withStyles } from \"@material-ui/core\";\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"100%\",\r\n    right: \"90%\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"colors\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {topbarThemes\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.topbar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.topbar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background image</div>\r\n\r\n        <div className=\"layout-boxes\">\r\n          {sidebarBG.map((bg, i) => (\r\n            <BadgeSelected\r\n              key={i}\r\n              color=\"primary\"\r\n              className=\"layout-box\"\r\n              style={{ width: \"calc(25% - 8px)\" }}\r\n              badgeContent={<Icon>done</Icon>}\r\n              invisible={settings.layout1Settings.leftSidebar.bgImgURL !== bg}\r\n            >\r\n              <Paper\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                }\r\n                style={{ height: \"160px\" }}\r\n              >\r\n                <img src={bg} alt=\"\" />\r\n              </Paper>\r\n            </BadgeSelected>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-32 mx-12\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-16 mx-12\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-12 mb-24\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  FormGroup,\r\n  Tooltip,\r\n  Switch,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { merge, get, set } from \"lodash\";\r\nimport Layout1Customizer from \"./Layout1Customizer\";\r\nimport Layout2Customizer from \"./Layout2Customizer\";\r\nimport { themeColors } from \"../../EgretTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport ConstantList from \"../../../appConfig\";\r\nconst styles = theme => ({\r\n  root: {\r\n    \r\n  },\r\n  paper: {\r\n    display: \"inherit\"\r\n  }\r\n});\r\n\r\nclass EgretCustomizer extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  updateSettings = newSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    let updatedSettings = merge({}, settings, newSettings);\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  selectLayout = activeLayout => {\r\n    this.updateSettings({ activeLayout });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    let { settings } = this.props;\r\n    let updatedSettings = set(settings, name, value);\r\n\r\n    this.updateSettings(updatedSettings);\r\n  };\r\n\r\n  handleControlChange = name => event => {\r\n    let controlValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    this.handleChange(name, controlValue);\r\n  };\r\n\r\n  tooglePanel = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes } = this.props;\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n    // console.log(activeTheme);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"delete\"\r\n            className=\"my-12\"\r\n            onClick={this.tooglePanel}\r\n          >\r\n            <Icon className=\"spin\">settings</Icon>\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {this.state.open && (\r\n          <MuiThemeProvider theme={activeTheme}>\r\n            <div\r\n              className={`egret-customizer pb-8 ${classes.root}`}\r\n              style={{\r\n                backgroundColor: activeTheme.palette.background.default\r\n              }}\r\n            >\r\n              <div className=\"flex felx-row flex-middle p-16 mb-16 elevation-z6\" style={{minHeight: \"64px\"}}>\r\n                <Icon color=\"primary\">settings</Icon>\r\n                <h5 className=\"mb-0 ml-8\">Theme Settings</h5>\r\n                <IconButton\r\n                  onClick={this.tooglePanel}\r\n                  className=\"customizer-close\"\r\n                >\r\n                  <Icon>close</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <Scrollbar options={{ suppressScrollX: true }} className=\"px-16\">\r\n                <div className=\"mt-8 mb-32 mx-12\">\r\n                  <div className=\"text-muted\">Layouts</div>\r\n\r\n                  <div className=\"layout-boxes\">\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout1\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout1\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout1-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={<Icon>done</Icon>}\r\n                      invisible={settings.activeLayout !== \"layout2\"}\r\n                    >\r\n                      <Paper onClick={() => this.selectLayout(\"layout2\")} elevation={4}>\r\n                        <img\r\n                          src= {ConstantList.ROOT_PATH+\"assets/images/screenshots/layout2-customizer.png\"}\r\n                          alt=\"\"\r\n                        />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                  </div>\r\n                </div>\r\n                {/* END LAYOUT */}\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Main theme</div>\r\n                  <div className=\"colors\">\r\n                    {mainThemes.map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.updateSettings({ activeTheme: color })\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.activeTheme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {settings.activeLayout === \"layout1\" && (\r\n                  <Layout1Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                {settings.activeLayout === \"layout2\" && (\r\n                  <Layout2Customizer\r\n                    settings={settings}\r\n                    handleChange={this.handleChange}\r\n                    handleControlChange={this.handleControlChange}\r\n                  />\r\n                )}\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Footer</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.footer, \"show\")}\r\n                            onChange={this.handleControlChange(\"footer.show\")}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(\r\n                              settings.layout1Settings.footer,\r\n                              \"fixed\"\r\n                            )}\r\n                            onChange={this.handleControlChange(\"footer.fixed\")}\r\n                          />\r\n                        }\r\n                        label=\"Fixed\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mx-12 mb-24\">\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={get(settings.secondarySidebar, \"show\")}\r\n                            onChange={this.handleControlChange(\r\n                              \"secondarySidebar.show\"\r\n                            )}\r\n                          />\r\n                        }\r\n                        label=\"Show\"\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"secondarySidebar.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.secondarySidebar.theme === color && (\r\n                            <Icon>done</Icon>\r\n                          )}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-16 mx-12\">\r\n                  <div className=\"text-muted mb-4\">Footer theme</div>\r\n                  <div className=\"colors\">\r\n                    {topbarThemes\r\n                    .map((color, i) => (\r\n                      <Tooltip key={i} title={color} placement=\"top\">\r\n                        <div\r\n                          className=\"color\"\r\n                          onClick={() =>\r\n                            this.handleChange(\"footer.theme\", color)\r\n                          }\r\n                          style={{\r\n                            backgroundColor:\r\n                              themeColors[color].palette.primary.main\r\n                          }}\r\n                        >\r\n                          {settings.footer.theme === color && <Icon>done</Icon>}\r\n                          <div\r\n                            className={settings.themes[color].palette.type}\r\n                          ></div>\r\n                        </div>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Scrollbar>\r\n            </div>\r\n          </MuiThemeProvider>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings, setDefaultSettings }\r\n  )(EgretCustomizer)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MuiThemeProvider,\r\n  Badge,\r\n  Fab,\r\n  IconButton,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { classList, isMobile, debounce } from \"utils\";\r\nimport EgretCustomizer from \"./EgretCustomizer/EgretCustomizer\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst width = \"50px\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width,\r\n    right: `-${width}`,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\",\r\n    \"&.open\": {\r\n      right: 0,\r\n      \"& .toggle\": {\r\n        left: 0\r\n      }\r\n    },\r\n    \"& .toggle\": {\r\n      position: \"relative\",\r\n      left: \"-28px\",\r\n      bottom: \"20px\",\r\n      transition: \"all 0.15s ease\"\r\n    }\r\n  }\r\n});\r\n\r\nclass SecondarySidebar extends Component {\r\n  state = {\r\n    open: true\r\n  };\r\n  listenWindowResizeRef;\r\n\r\n  toggle = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({ open: !isMobile() });\r\n    if (window) {\r\n      this.listenWindowResizeRef = this.listenWindowResize();\r\n      // LISTEN WINDOW RESIZE\r\n      window.addEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) {\r\n      window.removeEventListener(\"resize\", this.listenWindowResizeRef);\r\n    }\r\n  }\r\n\r\n  listenWindowResize = () => {\r\n    return debounce(() => {\r\n      this.setState({ open: !isMobile() });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n    const secondarySidebarTheme =\r\n      settings.themes[settings.secondarySidebar.theme] || theme;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={secondarySidebarTheme}>\r\n        {this.state.open && !isMobile() && (\r\n          <Helmet>\r\n            <style>\r\n              {`\r\n              .content-wrap, \r\n              .layout2.layout-contained, \r\n              .layout2.layout-full {\r\n                margin-right: ${width};\r\n              }\r\n              @media screen and (max-width: 959px) {\r\n                .toolbar-menu-wrap .menu-area {\r\n                  width: calc(100% - ${width});\r\n                }\r\n              }\r\n              .egret-customizer {\r\n                right: ${width};\r\n              }\r\n            `}\r\n            </style>\r\n          </Helmet>\r\n        )}\r\n\r\n        <div\r\n          className={\r\n            classes.root +\r\n            \" \" +\r\n            classList({\r\n              open: this.state.open,\r\n              \"secondary-sidebar\": true\r\n            })\r\n          }\r\n          style={{\r\n            backgroundColor: secondarySidebarTheme.palette.primary.main\r\n          }}\r\n        >\r\n          <span className=\"m-auto\"></span>\r\n\r\n          <EgretCustomizer />\r\n\r\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-12\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n\r\n          {/* Toggle Button */}\r\n          <span className=\"m-auto\"></span>\r\n          <div className=\"toggle\">\r\n            {this.state.open && (\r\n              <IconButton\r\n                onClick={this.toggle}\r\n                size=\"small\"\r\n                aria-label=\"toggle\"\r\n              >\r\n                <Icon>arrow_right</Icon>\r\n              </IconButton>\r\n            )}\r\n            {!this.state.open && (\r\n              <Fab\r\n                variant=\"extended\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className=\"pr-36\"\r\n                onClick={this.toggle}\r\n              >\r\n                <Icon>arrow_left</Icon>\r\n              </Fab>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {}\r\n    )(SecondarySidebar)\r\n  )\r\n);\r\n"],"sourceRoot":""}